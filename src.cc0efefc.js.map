{"version":3,"sources":["src/index.js"],"names":["Trie","lst","Array","fill","wordList","Set","buildWord","root","word","i","ascii","add","str","charCodeAt","div","document","getElementById","autocompleteMatch","input","arr","dfs","idx","length","c","push","showResults","$e","list","terms","target","value","innerHTML","querySelectorAll","forEach","e","addEventListener","$event","preventDefault","search_terms","each","querySelector"],"mappings":"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","file":"src.cc0efefc.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\n\nclass Trie {\n  constructor() {\n    this.lst = [...Array(256)].fill(null);\n    this.wordList = new Set();\n  }\n}\n\nvar buildWord = function (root, word) {\n  for (const i of word) {\n    if (root.lst[ascii(i)] == null) {\n      root.lst[ascii(i)] = new Trie();\n    }\n    root = root.lst[ascii(i)];\n    root.wordList.add(word);\n  }\n};\n\nfunction ascii(str) {\n  return str.charCodeAt(0);\n}\n\nvar root = new Trie();\nvar div = document.getElementById(\"result\");\n\n((search_terms) => {\n  for (const each of search_terms) {\n    buildWord(root, each);\n  }\n})([\n  \"apple\",\n  \"applewatch\",\n  \"applemacbook\",\n  \"applemacbookpro\",\n  \"iphone\",\n  \"alla fdfsd\"\n]);\n\nfunction autocompleteMatch(root, input) {\n  const arr = [];\n  (function dfs(root, input, idx) {\n    if (root == null) return;\n    if (idx === input.length) {\n      arr.push(...root.wordList);\n      return;\n    }\n\n    var c = ascii(input[idx]);\n    if (root.lst[c] == null) return;\n    dfs(root.lst[c], input, idx + 1);\n  })(root, input, 0);\n  return arr;\n}\n\nfunction showResults($e) {\n  let list = \"\";\n  let terms = autocompleteMatch(root, $e.target.value);\n  for (var i = 0; i < terms.length; i++) {\n    list += \"<li>\" + terms[i] + \"</li>\";\n  }\n  div.innerHTML = \"<ul>\" + list + \"</ul>\";\n  document.querySelectorAll(\"li\").forEach((e) =>\n    e.addEventListener(\"click\", ($event) => {\n      document.getElementById(\"q\").value = $event.target.innerHTML;\n      $event.preventDefault();\n    })\n  );\n}\n\ndocument.getElementById(\"q\").addEventListener(\"input\", showResults);\ndocument.querySelector(\"html\").addEventListener(\"click\", ($e) => {\n  if (typeof $e.target.value === \"undefined\") {\n    div.innerHTML = \"\";\n  }\n});\n"]}